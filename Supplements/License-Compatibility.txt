%###########################################################################
%
% Annex to the OSADL Open Source Policy Template
%
% Copyright (c) 2020 Open Source Automation Development Lab (OSADL) eG
% Author: Caren Kresse, Till Jaeger
% 
%###########################################################################

License compatibility


In the course of the adoption of FOSS and modern software development 
strategies, it has become indispensable to combine pre-existing software 
components (e.g. program libraries) that are licensed under different licenses 
and distribute them together. The same applies to code snippets which are 
transferred from one FOSS project to another. This raises the question whether 
or not such code integration or combination under more than one FOSS license is 
compliant with the applicable license conditions and in which cases FOSS 
licenses are incompatible.

There are three possible outcomes when evaluating compatibility of FOSS licenses 
with each other:

- Incompatibility: Two licenses are incompatible with each other when they 
contradict each other, i.e. one requires something that the other one does not 
allow to require.

- Unilateral compatibility: Two licenses are unilaterally compatible when their 
requirements do not contradict each other but one license requires to be the 
valid (”leading”) license for the combination of code under the involved 
licenses (typically based on a copyleft clause).

- Multilateral compatibility: Two or more licenses are bi- or multilaterally 
compatible when their requirements do not contradict each other and none of them 
has any licensing requirements on differently licensed components of the 
combination of code.

Whereas the use of code under several permissive licenses is always permitted 
since there are no conflicting license conditions known to this day, the use of 
code under a copyleft license may cause license incompatibilities. The reason is 
that copyleft licenses are self-referential, i.e. the license requires that 
modifications must be licensed under the original license and not under any 
other licensing conditions. For details, see -> Supplement ”What is Copyleft?”. 
To the extent the copyleft of the involved licenses is not triggered, license 
compatibility is not an issue. However, if the copyleft in a concrete technical 
constellation extends to code under a divergent license, a license compatibility 
check must be carried out. Therefore, in a first step it must be checked whether 
and to what extent the copyleft of the relevant licenses is triggered, and 
subsequently in a second step the license compatibility of the licenses involved 
must be assessed.

Some general guidelines for determining compatibility of FOSS licenses have 
evolved empirically:

- Copyleft licenses are not compatible with each other.
Copyleft licenses each require that the modified code be subject only to the 
original license. This is not feasible with multiple involved licenses with a 
copyleft, since all licenses but one are necessarily violated.

Figure 1: Copyleft licenses are not compatible with each other (example).
GPL-2.0, MPL-1.1, EPL-1.0 -> No compatibilty

Exception:
A copyleft license may explicitly provide a particular compatibility exception 
for another copyleft license, e.g. LGPL-2.1 and GPL: ”You may opt to apply the 
terms of the ordinary GNU General Public License instead of this License to a 
given copy of the Library.”

Figure 2: Compatibility of copyleft licenses can be explicitly ruled by 
exception (example).
GPL-2.0, LGPL-2.1, MPL-2.0 -> GPL-2.0

- Permissive licenses are unilaterally compatible with copyleft licenses.
A copyleft license and a permissive license are generally compatible, with the 
copyleft license being the ”leading” license under which the derivative work is 
distributed. The reason is that there is a long term consensus in the FOSS 
community that copyleft licenses are compatible with permissive license which do 
not have additional requirements but only license conditions contained in the 
copyleft license as well. Exception: If the permissive license contains 
additional requirements that the copyleft license does not require, they are not 
compatible; e.g. the BSD-4-Clause is a permissive license that contains an 
advertising clause (see -> Supplement ”How to: Acknowledgments”) which in the 
sense of the GPL-2.0 constitutes a ”further restriction”, and thus makes the two 
licenses incompatible.

Figure 3: Permissive licenses are unilaterally compatible with copyleft licenses 
unless the permissive license contains additional requirements (example).
GPL-2.0, BSD-2-Clause -> GPL-2.0
BSD-4-Clause -> Not comaptible

- Permissive licenses are multilaterally compatible.
Permissive FOSS licenses are generally compatible with each other. A combination 
of components licensed only under permissive licenses can be compliantly 
distributed by fulfilling the license obligations of all involved licenses.

Figure 4: Permissive licenses are multilaterally compatible (example).
MIT, BSD-2-Clause, Apache-2.0 -> Optional license, i.e. MIT, BSD-2-Clause, 
Apache-2.0 or other (even proprietary)

- If a license is unclear or the copyleft is questionable, compatibility cannot 
be determined universally.
If a license requirement or the extend of a copyleft clause is unclear, 
compatibility with other licenses has to be decided on an individual basis.

These guidelines have emerged from creating the -> ”OSADL Compatibility Matrix”. 
This matrix displays the state of compatibility of every license that is 
evaluated as part of the -> ”OSADL Open Source License Obligations Checklists” 
with every other license (Please note that the Compatibility Matrix and the Open 
Source License Obligations Checklists are work in progress and as such require 
continuous review to give the information they provide more legal certainty.). 
Compatibility is displayed by a green field, incompatibility by a red field and 
unclear cases by a gray field. In case two licenses are unilaterally compatible, 
the leading license marks the row of the matrix. For a schematic of the matrix 
see Table 1.

License A: Copyleft license that does not allow further restrictions (e.g. 
GPL-2.0)
License B: Copyleft license with explicit compatibility with license A (e.g. 
LGPL-2.1)
License C: License with an unclear copyleft clause (e.g. OpenSSL)
License D: Permissive license without further requirements (e.g. MIT)
License E: Permissive license with further requirements (e.g. BSD-4-Clause)

Table 1: Schematics of the -> ”OSADL Compatibility Matrix”

Leading License: License A
Compatibility with 
  - License B: Yes
  - License C: Unknown
  - License D: Yes
  - License E: No

Leading License: License B
Compatibility with 
  - License A: No
  - License C: Unknown
  - License D: Yes
  - License E: No

Leading License: License C
Compatibility with 
  - License A: No
  - License B: No
  - License D: Unknown
  - License E: Unknown

Leading License: License D
Compatibility with 
  - License A: No
  - License B: No
  - License C: Unknown
  - License E: Yes

Leading License: License E
Compatibility with 
  - License A: No
  - License B: No
  - License C: Unknown
  - License D: Yes
